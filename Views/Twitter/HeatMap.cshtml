@using System.Collections
@model TwitterSearch.Models.TweetSearch

@{
    Layout = null;
}
<!DOCTYPE html>
<html>
    <head>
        <meta name="viewport" content="width=device-width" />
        <title>HeatMap</title>
        
        <style>
            html { height: 100% }
            body { height: 100%; margin: 0; padding: 0 }
            #map-canvas { width: 65%; height: 65%; border: 1px solid #5E5454 }

            #panel {
                position: absolute;
                top: 5px;
                left: 50%;
                margin-left: -180px;
                z-index: 5;
                background-color: #fff;
                padding: 5px;
                border: 1px solid #999;
            }
        </style>      

    </head>

    <body>
        
        <span style="font-size:medium;font-weight:bold;">Search Mode</span>
        <ol class="searchModeSelection">
            @foreach (var searchMode in Model.SearchModes)
            {
                <li>
                    @Html.RadioButton("searchMode", searchMode.ToString())
                    @Html.Label(searchMode.ToString())
                </li>
            }
        </ol>
    
        <br />
   
        <div class="searchParameter">
            <span style="font-size:medium;font-weight:bold;">Hash Tag</span>
            <input type="text" id="tbHashTag" />
        </div>
    
        <div class="searchParameter">
            <span style="font-size:medium;font-weight:bold;">User Name</span>
            <input type="text" id="tbUserName" />
        </div> 
    
        <br />

        <input type="button" id="btnStartSearch" value="Start Search" />
        <input type="button" id="btnStopSearch" value="Pause Search" />
        <input type="button" id="btnResumeSearch" value="Resume Search" />
    
        <input type="hidden" id="userLoginName" />
        
        <div id="panel">
            <button onclick="toggleHeatmap()">Toggle Heatmap</button>
            <button onclick="changeGradient()">Change gradient</button>
            <button onclick="changeRadius()">Change radius</button>
            <button onclick="changeOpacity()">Change opacity</button>
        </div>

        <div id="map-canvas"></div>
        
        <ul id="tweetContents" class="tweetContainer"></ul>
        
        
        <ul id="testStock"></ul>
        
        

        <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=visualization"></script>

        <script>
            var map, pointarray, heatmap;

            var taxiData = [
                //new google.maps.LatLng(51.553188, 0.004374),
                //new google.maps.LatLng(51.553188, 0.004376),
                //new google.maps.LatLng(51.553188, 0.004378)
            ];

            //function initialize() {
            //    var mapOptions = {
            //        zoom: 11,
            //        center: new google.maps.LatLng(51.553188, 0.004374)
            //    };

            //    map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);

            //    var pointArray = new google.maps.MVCArray(taxiData);
            //    pointArray.push(pointArray);
                
            //    heatmap = new google.maps.visualization.HeatmapLayer({
            //        data: pointArray
            //    });

            //    heatmap.setMap(map);
            //}
            function toggleHeatmap() {
                heatmap.setMap(heatmap.getMap() ? null : map);
            }
            function changeGradient() {
                var gradient = [
                    'rgba(0, 255, 255, 0)',
                    'rgba(0, 0, 191, 1)',
                    'rgba(191, 0, 31, 1)',
                    'rgba(255, 0, 0, 1)'
                ];
                heatmap.set('gradient', heatmap.get('gradient') ? null : gradient);
            }
            function changeRadius() {
                heatmap.set('radius', heatmap.get('radius') ? null : 20);
            }
            function changeOpacity() {
                heatmap.set('opacity', heatmap.get('opacity') ? null : 0.2);
            }
            google.maps.event.addDomListener(window, 'load', initialize);
        </script>

        <script src="/Scripts/jquery-1.8.2.js"></script>
        
        <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
        <script src="~/Scripts/jquery.signalR-2.1.0.min.js"></script>

        <!--Reference the autogenerated SignalR hub script. -->
        <script src="~/signalr/hubs"></script>
       
        <script>
            $(function() {
                
                var twitterHub = $.connection.twitterHub;
                
                //function init() {
                //    twitterHub.server.getAllTweets().done(function (tweets) {
                //        $.each(tweets, function () {
                //            $('#testStock').append("TweetId: " + this.TweetId + " TweetText: " + this.TweetText + "<br>");
                //        });
                //    });
                //}
                
                function init() {
                    twitterHub.server.startSearch().done(function() {
                        $('#testStock').append("connecting..");
                    });
                }
                
                twitterHub.client.updateTweets = function (tweet) {
                    $('#testStock').append("TweetId2: " + tweet.TweetId + " TweetText2: " + tweet.TweetText + "<br>");
                };

                twitterHub.client.addTweetCollection = function (tweets) {
                    $.each(tweets, function () {
                        $('#tweetContents').append("TweetId: " + this.TweetId + " TweetText: " + this.TweetText + "<br>");
                    });
                };

                // Start the connection
                $.connection.hub.start().done(init);


                //var pointarray, heatmap, tweetLocation;

                //var mapOptions = {
                //    zoom: 8,
                //    center: new google.maps.LatLng(51.553188, 0.004374),
                //    //mapTypeId: google.maps.MapTypeId.SATELLITE
                //};

                //map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);

                //// Create a function that the hub can call back to display messages.
                //twitterHub.client.addTweetsToPage = function (tweetId, tweetText, tweetCreator, tweetLocation, tweetLat, tweetLon) {
                //    // Add the message to the page. 
                //    $('#tweetContents').append('<li><strong>' + htmlEncode(tweetId) + '</strong> <br />' +
                //        htmlEncode(tweetText) + '<br />' +
                //        htmlEncode(tweetCreator) + '<br />' +
                //        htmlEncode(tweetLocation) + '</li>');                  
                    
                //    tweetLocation = [new google.maps.LatLng(tweetLat, tweetLon)];

                //    pointArray = new google.maps.MVCArray(tweetLocation);

                //    heatmap = new google.maps.visualization.HeatmapLayer({
                //        data: pointArray
                //    });
                //    heatmap.setMap(map);

                    //tweetLocation = [new google.maps.LatLng(tweetLat, tweetLon)];

                    //pointArray = new google.maps.MVCArray(tweetLocation);

                    //heatmap = new google.maps.visualization.HeatmapLayer({
                    //    data: pointArray
                    //});
                    //heatmap.setMap(map);


                    //alert(tweetLat);
                    //alert(tweetLon);

                    //pointArray = new google.maps.MVCArray(tweetLocation);
                    //pointArray.push(pointArray);
                //};

                //$('#userLoginName').val(prompt('Enter your username:', ''));

                //$('#tbHashTag').focus();

                //$.connection.hub.start().done(function() {
                //    $('#btnStartSearch').click(function() {
                //        $('#tweetContents').append('<li><strong>connecting</stro‌​ng></li>');
                //        $.connection.hub.start();
                //        // Call the Send method on the hub. 
                //        twitterHub.server.startSearch($('#userLoginName').val(), $('#tbHashTag').val(), $('#tbUserName').val());
                //        //connection.start({ transport: ['webSockets', 'longPolling'] });
                //    });
                //});

                // Stop the connection.
                //$.connection.hub.start().done(function() {
                //    $('#btnStopSearch').click(function() {
                //        //chat.server.stopSearch();
                //        $.connection.hub.stop();
                //    });
                //});

                //$('#btnResumeSearch').click(function () {
                //    $('#tweetContents').append('<li><strong>resumed</stro‌​ng></li>');
                //    $.connection.hub.start();
                //    twitterHub.server.startSearch($('#userLoginName').val(), $('#tbHashTag').val(), $('#tbUserName').val());
                //});
            });

            // This optional function html-encodes messages for display in the page.

            function htmlEncode(value) {
                var encodedValue = $('<div />').text(value).html();
                return encodedValue;
            }
        </script>
    </body>
</html>

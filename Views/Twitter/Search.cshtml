@using System.Collections
@model TwitterSearch.Models.TweetSearch

@{
    ViewBag.Title = "Search";
}
<h1>Search Twitter</h1>

<div class="container">
    
    <span style="font-size:medium;font-weight:bold;">Search Mode</span>
    <ol class="searchModeSelection">
        @foreach (var searchMode in Model.SearchModes)
        {
            <li>
                @Html.RadioButton("searchMode", searchMode.ToString())
                @Html.Label(searchMode.ToString())
            </li>
        }
    </ol>
    
    <br />
   
    <div class="searchParameter">
        <span style="font-size:medium;font-weight:bold;">Hash Tag</span>
        <input type="text" id="tbHashTag" />
    </div>
    
    <div class="searchParameter">
        <span style="font-size:medium;font-weight:bold;">User Name</span>
        <input type="text" id="tbUserName" />
    </div> 
    
    <br />

    <input type="button" id="btnStartSearch" value="Find Tweets" />
    <input type="button" id="btnStopSearch" value="Pause Search" />

    <ul id="tweetContents" class="tweetContainer"></ul>
</div>

@section scripts {
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <script src="~/Scripts/jquery.signalR-2.1.0.min.js"></script>

    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>

    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.twitterHub;

            // Create a function that the hub can call back to display messages.
            chat.client.addTweetsToPage = function (tweetId, tweetText, tweetCreator, tweetLocation) {
                // Add the message to the page. 
                $('#tweetContents').append('<li><strong>' + htmlEncode(tweetId) + '</strong> <br />' +
                    htmlEncode(tweetText) + '<br />' +
                    htmlEncode(tweetCreator) + '<br />' +
                    htmlEncode(tweetLocation) + '</li>');
            };

            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#btnStartSearch').click(function () {
                    // Call the Send method on the hub. 
                    chat.server.startSearch($('#tbHashTag').val(), $('#tbUserName').val());
                });
            });
            // Stop the connection.
            $.connection.hub.start().done(function () {
                $('#btnStopSearch').click(function () {
                    chat.server.stopSearch();
                });
            });
        });

        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
}